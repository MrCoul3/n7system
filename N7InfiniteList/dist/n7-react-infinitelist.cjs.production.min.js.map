{"version":3,"file":"n7-react-infinitelist.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport _ from 'lodash';\n\ninterface IProps {\n  children?: string | React.ReactNode;\n  loadMore(dataLength: number): void;\n  countLimit: number | null;\n  dataLength: number;\n  minWidth?: string;\n  maxHeight?: string;\n}\n\nexport const InfiniteList = (props: IProps) => {\n  const dataLength = props.dataLength;\n  const wrap = useRef<HTMLDivElement>(null);\n  const [delta, setDelta] = useState<number>();\n\n  function useThrottle(cb: any, delay: number) {\n    const options = { leading: true, trailing: false };\n    const cbRef = useRef(cb);\n    useEffect(() => {\n      cbRef.current = cb;\n    });\n    return useCallback(\n      _.throttle((...args) => cbRef.current(...args), delay, options),\n      [delay]\n    );\n  }\n  const throttleLoadMore = useThrottle(() => props.loadMore(dataLength), 500);\n\n  useEffect(() => {\n    const wrapCurrent = wrap.current as HTMLDivElement;\n    setDelta(+wrapCurrent?.clientHeight - +wrapCurrent?.scrollHeight);\n  }, []);\n\n  useEffect(() => {\n    const wrapCurrent = wrap.current as HTMLDivElement;\n    if (\n      delta !== undefined &&\n      wrapCurrent?.clientHeight - wrapCurrent?.scrollHeight === 0 &&\n      dataLength !== 0\n    ) {\n      props.loadMore(dataLength);\n    }\n  }, [delta, props.dataLength]);\n\n  function handleScroll(e: React.UIEvent<HTMLElement>) {\n    const element = e.target as HTMLDivElement;\n    const countLimit = props.countLimit ? props.countLimit : 0;\n    let scrollBottom =\n      element.scrollHeight - element.offsetHeight - element.scrollTop;\n    if (dataLength < countLimit) {\n      if (Math.floor(scrollBottom) <= 0) {\n        throttleLoadMore();\n      }\n    }\n  }\n  return (\n    <div\n      ref={wrap}\n      onScroll={handleScroll}\n      style={{\n        minWidth: props.minWidth,\n        maxHeight: props.maxHeight,\n        overflowY: 'scroll',\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n"],"names":["props","cb","cbRef","dataLength","wrap","useRef","useState","delta","setDelta","throttleLoadMore","loadMore","useEffect","current","useCallback","_","throttle","leading","trailing","wrapCurrent","clientHeight","scrollHeight","undefined","React","ref","onScroll","e","element","target","countLimit","Math","floor","offsetHeight","scrollTop","style","minWidth","maxHeight","overflowY","children"],"mappings":"oNAY4B,SAACA,OAKNC,EAEbC,EANFC,EAAaH,EAAMG,WACnBC,EAAOC,SAAuB,QACVC,aAAnBC,OAAOC,OAaRC,GATEP,EAAQG,SAFKJ,EAWgB,kBAAMD,EAAMU,SAASP,KARxDQ,aAAU,WACRT,EAAMU,QAAUX,KAEXY,cACLC,EAAEC,UAAS,kBAAab,EAAMU,cAANV,eAI2C,IAVrD,CAAEc,SAAS,EAAMC,UAAU,IAOzC,CAGmE,cAEvEN,aAAU,eACFO,EAAcd,EAAKQ,QACzBJ,UAAUU,SAAAA,EAAaC,sBAAgBD,SAAAA,EAAaE,iBACnD,IAEHT,aAAU,eACFO,EAAcd,EAAKQ,aAEbS,IAAVd,UACAW,SAAAA,EAAaC,qBAAeD,SAAAA,EAAaE,eAAiB,GAC3C,IAAfjB,GAEAH,EAAMU,SAASP,KAEhB,CAACI,EAAOP,EAAMG,aAcfmB,uBACEC,IAAKnB,EACLoB,kBAdkBC,OACdC,EAAUD,EAAEE,OAIdxB,GAHeH,EAAM4B,WAAa5B,EAAM4B,WAAa,IAInDC,KAAKC,MAFTJ,EAAQN,aAAeM,EAAQK,aAAeL,EAAQM,YAEtB,GAC9BvB,KAQFwB,MAAO,CACLC,SAAUlC,EAAMkC,SAChBC,UAAWnC,EAAMmC,UACjBC,UAAW,WAGZpC,EAAMqC"}